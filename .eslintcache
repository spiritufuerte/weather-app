[{"C:\\Users\\Nastya\\Desktop\\weather-app\\src\\index.js":"1","C:\\Users\\Nastya\\Desktop\\weather-app\\src\\App.js":"2","C:\\Users\\Nastya\\Desktop\\weather-app\\src\\components\\Weather.jsx":"3","C:\\Users\\Nastya\\Desktop\\weather-app\\src\\components\\SearchComponent.jsx":"4","C:\\Users\\Nastya\\Desktop\\weather-app\\src\\api\\WeatherApi.js":"5","C:\\Users\\Nastya\\Desktop\\weather-app\\src\\api\\GeocodeApi.js":"6"},{"size":185,"mtime":1612176304094,"results":"7","hashOfConfig":"8"},{"size":199,"mtime":1612176328670,"results":"9","hashOfConfig":"8"},{"size":2027,"mtime":1612218992723,"results":"10","hashOfConfig":"8"},{"size":987,"mtime":1612182403318,"results":"11","hashOfConfig":"8"},{"size":950,"mtime":1612219101942,"results":"12","hashOfConfig":"8"},{"size":755,"mtime":1612117698817,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17m28gm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\Nastya\\Desktop\\weather-app\\src\\index.js",[],["30","31"],"C:\\Users\\Nastya\\Desktop\\weather-app\\src\\App.js",[],"C:\\Users\\Nastya\\Desktop\\weather-app\\src\\components\\Weather.jsx",["32","33"],"import React, {useEffect, useState} from 'react';\r\nimport SearchComponent from \"./SearchComponent\";\r\nimport {getWeather} from \"../api/WeatherApi\";\r\nimport classes from './Weather.module.scss';\r\n\r\nconst Weather = () => {\r\n  const [city, setCity] = useState(null);\r\n  const [weather, setWeather] = useState({\r\n    currentTemp: 0,\r\n    tMax: 0,\r\n    tMin: 0,\r\n    currentSunset: new Date(),\r\n    currentSunrise: new Date(),\r\n    currentClouds: 0,\r\n    weatherIcon: '',\r\n    weatherDescription: ''\r\n  });\r\n\r\n  const handleSearch = async ({city, lng, lat}) => {\r\n    const result = await getWeather({lng, lat});\r\n    setWeather(result);\r\n    setCity(city);\r\n  };\r\n\r\n  function formatDate(date) {\r\n    let monthNames = [\r\n      \"January\", \"February\", \"March\",\r\n      \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\",\r\n      \"November\", \"December\"\r\n    ];\r\n\r\n    let day = date.getDate();\r\n    let monthIndex = date.getMonth();\r\n\r\n    return day + ' ' + monthNames[monthIndex];\r\n  }\r\n\r\n  let date = formatDate(new Date());\r\n  let src = `http://openweathermap.org/img/wn/${weather.weatherIcon}@2x.png`;\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <SearchComponent handleSearch={handleSearch}/>\r\n      <div className={classes.info}>\r\n        <div className={classes.location}>\r\n          <h1>{city}</h1>\r\n          <h2>{date}</h2>\r\n          <img src={src}/>\r\n          <p>Weather condition: {weather.weatherDescription}</p>\r\n        </div>\r\n        <div className={classes.weather_wrapper}>\r\n          <p>Temperature now: {weather.currentTemp} °C</p>\r\n          <p>Min temperature today: {weather.tMin} °C</p>\r\n          <p>Max temperature today: {weather.tMax} °C</p>\r\n          <p>Sunset: {weather.currentSunset.getHours()}:{weather.currentSunset.getMinutes()}</p>\r\n          <p>Sunrise: {weather.currentSunrise.getHours()}:{weather.currentSunrise.getMinutes()}</p>\r\n          <p>Clouds: {weather.currentClouds}%</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;","C:\\Users\\Nastya\\Desktop\\weather-app\\src\\components\\SearchComponent.jsx",["34"],"import React, {useRef, useEffect} from 'react';\r\nimport './SearchComponent.css';\r\nimport {getCoordinatesByCity, getCityByCoordinates} from \"../api/GeocodeApi\";\r\n\r\nconst SearchComponent = ({handleSearch}) => {\r\n  const ref = useRef(null);\r\n\r\n  const handlerSubmit = async (e) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    const city = ref.current.value;\r\n    const {lat, lng} = await getCoordinatesByCity(city);\r\n    handleSearch({city, lat, lng});\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        ref.current.value = await getCityByCoordinates(position.coords.latitude, position.coords.longitude);\r\n        await handlerSubmit(null);\r\n      }\r\n    );\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handlerSubmit}>\r\n      <div className=\"input_wrapper\">\r\n        <input type=\"text\" placeholder=\"Search location\" ref={ref}/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchComponent;","C:\\Users\\Nastya\\Desktop\\weather-app\\src\\api\\WeatherApi.js",[],"C:\\Users\\Nastya\\Desktop\\weather-app\\src\\api\\GeocodeApi.js",[],["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":16,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"46","line":49,"column":11,"nodeType":"47","endLine":49,"endColumn":27},{"ruleId":"48","severity":1,"message":"49","line":25,"column":6,"nodeType":"50","endLine":25,"endColumn":8,"suggestions":"51"},{"ruleId":"37","replacedBy":"52"},{"ruleId":"39","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlerSubmit'. Either include it or remove the dependency array.","ArrayExpression",["56"],["54"],["55"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [handlerSubmit]",{"range":"59","text":"60"},[735,737],"[handlerSubmit]"]